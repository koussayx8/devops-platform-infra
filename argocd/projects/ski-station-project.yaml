# ArgoCD Project for Ski Station Platform
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: ski-station-project
  namespace: argocd
  labels:
    app.kubernetes.io/name: ski-station-project
    app.kubernetes.io/component: gitops
spec:
  description: "Ski Station Management Platform GitOps Project"
  
  # Source repositories that applications within this project can pull from
  sourceRepos:
  - 'https://github.com/koussayx8/devops-platform-infra.git'
  - 'https://argoproj.github.io/argo-helm'
  - 'https://prometheus-community.github.io/helm-charts'
  - 'https://grafana.github.io/helm-charts'
  
  # Destination clusters and namespaces
  destinations:
  - namespace: 'ski-station'
    server: 'https://kubernetes.default.svc'
  - namespace: 'monitoring'
    server: 'https://kubernetes.default.svc'
  - namespace: 'argocd'
    server: 'https://kubernetes.default.svc'
  - namespace: 'kube-system'
    server: 'https://kubernetes.default.svc'
  
  # Cluster-scoped resources allowed to be managed
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: ''
    kind: ClusterRole
  - group: ''
    kind: ClusterRoleBinding
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRole
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRoleBinding
  - group: 'apiextensions.k8s.io'
    kind: CustomResourceDefinition
  - group: 'networking.k8s.io'
    kind: IngressClass
  
  # Namespace-scoped resources allowed to be managed
  namespaceResourceWhitelist:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: Service
  - group: ''
    kind: ServiceAccount
  - group: 'apps'
    kind: Deployment
  - group: 'apps'
    kind: ReplicaSet
  - group: 'apps'
    kind: StatefulSet
  - group: 'apps'
    kind: DaemonSet
  - group: 'networking.k8s.io'
    kind: Ingress
  - group: 'networking.k8s.io'
    kind: NetworkPolicy
  - group: 'monitoring.coreos.com'
    kind: ServiceMonitor
  - group: 'monitoring.coreos.com'
    kind: PrometheusRule
  - group: 'policy'
    kind: PodSecurityPolicy
  - group: 'rbac.authorization.k8s.io'
    kind: Role
  - group: 'rbac.authorization.k8s.io'
    kind: RoleBinding
  - group: 'autoscaling'
    kind: HorizontalPodAutoscaler
  - group: 'batch'
    kind: Job
  - group: 'batch'
    kind: CronJob
  
  # Project roles for RBAC
  roles:
  # Developer role - can sync applications but not modify project settings
  - name: developer
    description: "Developer access to ski-station applications"
    policies:
    - p, proj:ski-station-project:developer, applications, get, ski-station-project/*, allow
    - p, proj:ski-station-project:developer, applications, sync, ski-station-project/*, allow
    - p, proj:ski-station-project:developer, applications, action/*, ski-station-project/*, allow
    - p, proj:ski-station-project:developer, logs, get, ski-station-project/*, allow
    - p, proj:ski-station-project:developer, exec, create, ski-station-project/*, allow
    # groups:
    # - devops-platform-infra:developers
  
  # DevOps role - full access to applications and project settings
  - name: devops
    description: "DevOps admin access to ski-station project"
    policies:
    - p, proj:ski-station-project:devops, applications, *, ski-station-project/*, allow
    - p, proj:ski-station-project:devops, logs, *, ski-station-project/*, allow
    - p, proj:ski-station-project:devops, exec, *, ski-station-project/*, allow
    - p, proj:ski-station-project:devops, repositories, *, *, allow
    # groups:
    # - devops-platform-infra:devops
    # - devops-platform-infra:admins
  
  # Sync windows for scheduled deployments - Simplified for VM
  syncWindows:
  - kind: allow
    schedule: '0 9-17 * * 1-5'  # Business hours Monday-Friday
    duration: 8h
    applications:
    - ski-station-dev
    manualSync: true