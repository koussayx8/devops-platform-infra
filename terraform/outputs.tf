# VPC Outputs
output "vpc_id" {
  description = "ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "public_subnet_ids" {
  description = "IDs of public subnets"
  value       = module.vpc.public_subnet_ids
}

output "private_subnet_ids" {
  description = "IDs of private subnets"
  value       = module.vpc.private_subnet_ids
}

output "nat_gateway_ips" {
  description = "Public IPs of NAT Gateways"
  value       = module.vpc.nat_gateway_ips
}

# Environment Information
output "environment_info" {
  description = "Environment information"
  value = {
    environment = var.environment
    region      = var.aws_region
    project     = var.project_name
  }
}

# Network Summary
output "network_summary" {
  description = "Network configuration summary"
  value = {
    vpc_cidr             = module.vpc.vpc_cidr_block
    availability_zones   = var.availability_zones
    public_subnets      = length(module.vpc.public_subnet_ids)
    private_subnets     = length(module.vpc.private_subnet_ids)
    nat_gateways        = length(module.vpc.nat_gateway_ids)
  }
}


# EKS Cluster Outputs
output "eks_cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "eks_cluster_arn" {
  description = "EKS cluster ARN"  
  value       = module.eks.cluster_arn
}

output "eks_cluster_endpoint" {
  description = "EKS cluster API server endpoint"
  value       = module.eks.cluster_endpoint
}

output "eks_cluster_version" {
  description = "EKS cluster Kubernetes version"
  value       = module.eks.cluster_version
}

output "eks_cluster_security_group_id" {
  description = "Security group ID attached to EKS cluster"
  value       = module.eks.cluster_security_group_id
}

output "eks_node_group_arn" {
  description = "EKS node group ARN"
  value       = module.eks.node_group_arn
}

output "eks_node_group_status" {
  description = "EKS node group status"
  value       = module.eks.node_group_status
}

# Kubectl Configuration
output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value = {
    cluster_name                     = try(module.eks.cluster_id, "cluster-not-created")
    endpoint                        = try(module.eks.cluster_endpoint, "endpoint-not-available")
    certificate_authority_data      = try(module.eks.cluster_certificate_authority_data, "cert-not-available")
    region                         = var.aws_region
    cluster_security_group_id      = try(module.eks.cluster_security_group_id, "sg-not-available")
    
    # Commands to configure kubectl - Fixed version
    update_kubeconfig_command      = module.eks.cluster_id != null ? "aws eks update-kubeconfig --region ${var.aws_region} --name ${module.eks.cluster_id}" : "aws eks update-kubeconfig --region ${var.aws_region} --name cluster-name"
  }
}

# Cluster Summary
output "cluster_summary" {
  description = "EKS cluster summary information"
  value = {
    cluster_name     = try(module.eks.cluster_id, "cluster-not-created")
    cluster_version  = try(module.eks.cluster_version, "version-not-available")
    node_group_type  = var.eks_node_capacity_type
    node_instances   = var.eks_node_instance_types
    min_nodes       = var.eks_node_min_size
    max_nodes       = var.eks_node_max_size
    desired_nodes   = var.eks_node_desired_size
  }
}